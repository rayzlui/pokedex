{"version":3,"sources":["actions/actionTypes.js","reducers/fetchDataReducer.js","reducers/fetchPokedexReducer.js","reducers/rootReducer.js","reducers/changePokedexReducers.js","reducers/changeDisplay.js","views/StyledComponents.js","views/PokemonDisplay.js","actions/actions.js","containers/ViewsContainer.js","containers/AbilityContainer.js","views/AbilityDisplay.js","views/ErrorView.js","containers/ErrorContainer.js","views/FetchingDisplay.js","containers/FetchingContainer.js","containers/ListContainer.js","views/ListDisplay.js","views/PokedexDisplay.js","views/SearchBarDisplay.js","views/Menu.js","containers/MenuContainer.js","containers/MoveContainer.js","views/MovesDisplay.js","containers/PokemonContainer.js","containers/TypeContainer.js","views/TypeDisplay.js","containers/PokedexContainer.js","containers/BerryContainer.js","views/BerryView.js","containers/ColorContainer.js","views/ColorView.js","containers/PokedexFetching.js","containers/PokedexError.js","containers/RootContainer.js","App.js","configureStore.js","serviceWorker.js","index.js"],"names":["FETCH_DATA_START","FETCH_POKEDEX_SUCESS","FETCH_DATA_SUCCESS","FETCH_DATA_ERROR","CHANGE_POKEDEX","CHANGE_DISPLAY_TO","FETCH_POKEDEX_START","FETCH_POKEDEX_ERROR","initialState","isFetching","data","error","listData","rootReducer","combineReducers","requestPokemon","state","arguments","length","undefined","action","type","Object","assign","requestPokedex","pokedex","region","displaying","display","LargeHeader","styled","h1","_templateObject","displayName","Button","button","_templateObject2","Section","section","_templateObject3","Image","img","_templateObject4","MediumSection","PokemonDisplay_templateObject","BACKGROUND_COLORS","fire","grass","water","flying","poison","electric","psychic","ice","fighting","ground","rock","steel","normal","ImageSection","PokemonDisplay_templateObject2","props","SmallSection","PokemonDisplay_templateObject3","LargeSection","PokemonDisplay_templateObject4","CreateButtonsFromInfo","array","requestData","react_default","a","createElement","Fragment","map","object","name","key","concat","onClick","ImageDisplay","sprites","validSprites","keys","filter","sprite","lengthSprites","index","indexOf","_useState","useState","_useState2","slicedToArray","spriteKey","changeKey","useEffect","rotate","setInterval","clearInterval","src","alt","fetchData","info","_requestPokemon","asyncToGenerator","regenerator_default","mark","_callee","dispatch","response","status","statusText","url","wrap","_context","prev","next","fetchDataStart","fetch","sent","json","fetchDataSuccess","fetchDataError","stop","_x","apply","this","fetchPokedexSuccess","ViewsContainer","connect","input","AbilityContainer","pokemon","firstEffect","effect_entries","effect","toUpperCase","ErrorView","errorInfo","ErrorContainer","LargerImage","FetchingDisplay_templateObject","FetchSection","FetchingDisplay_templateObject2","SPINNING_POKEBALL","FetchingDisplay","className","FetchingContainer","ListContainer","fetchUrl","_requestUrl","_callee3","_url","_context3","_x3","parameter","count","previous","results","previousButton","nextButton","Select","select","PokedexDisplay_templateObject","PokedexHeader","PokedexDisplay_templateObject2","PokedexDiv","div","PokedexDisplay_templateObject3","MultipleOptions","options","option","value","PokedexDisplay","changePokedex","onChange","event","target","ENTER_KEY","Input","SearchBarDisplay_templateObject","ChangeSearchByButtons","parameters","changeParameter","buttons","SearchBar","onKeyDown","keyCode","MenuSection","Menu_templateObject","ActiveButton","Menu_templateObject2","active","Nav","Menu_templateObject3","MenuContainer","_requestPokedex","_callee2","_context2","_x2","fetchPokedex","view","changeView","MoveContainer","accuracy","power","pp","accuracyDisplay","effectDisplay","powerDisplay","PokemonContainer","types","moves","abilities","TypeContainer","damage_relations","double_damage_from","double_damage_to","half_damage_from","half_damage_to","no_damage_from","no_damage_to","PokedexContainer","pokemon_entries","pokemon_species","BerryContainer","growth_time","firmness","max_harvest","size","smoothness","soil_dryness","flavors","flavor","join","ColorContainer","PokedexFetchingContainer","PokedexErrorContainer","DisplayDiv","RootContainer_templateObject","WrapperDiv","RootContainer_templateObject2","Container","RootContainer_templateObject3","RootContainer","store","middlewares","thunk","createStore","applyMiddleware","configureStore","App","es","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.89511ec7.chunk.js","sourcesContent":["export const FETCH_DATA_START = 'FETCH_DATA_START';\nexport const FETCH_POKEDEX_SUCESS = 'FETCH_POKEDEX_SUCESS';\nexport const FETCH_DATA_SUCCESS = 'FETCH_DATA_SUCCESS';\nexport const FETCH_DATA_ERROR = 'FETCH_DATA_ERROR';\nexport const CHANGE_POKEDEX = 'CHANGE_POKEDEX';\nexport const CHANGE_DISPLAY_TO = ' CHANGE_DISPLAY_TO';\nexport const FETCH_POKEDEX_START = 'FETCH_POKEDEX_START';\nexport const FETCH_POKEDEX_ERROR = 'FETCH_POKEDEX_ERROR';\n","import {\n  FETCH_DATA_SUCCESS,\n  FETCH_DATA_ERROR,\n  FETCH_DATA_START,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  isFetching: false,\n  data: null,\n  error: null,\n};\n\nexport function fetchDataReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_DATA_ERROR:\n      return Object.assign({}, state, {\n        isFetching: false,\n        data: null,\n        error: action.error,\n      });\n    case FETCH_DATA_SUCCESS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        data: action.data,\n        error: null,\n      });\n\n    case FETCH_DATA_START:\n      return Object.assign({}, state, {\n        isFetching: true,\n        error: null,\n      });\n    default:\n      return state;\n  }\n}\n","import {\n  FETCH_POKEDEX_SUCESS,\n  FETCH_POKEDEX_ERROR,\n  FETCH_POKEDEX_START,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  isFetching: false,\n  listData: null,\n  error: null,\n};\n\nexport function fetchPokedexReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_POKEDEX_ERROR:\n      return Object.assign({}, state, {\n        isFetching: false,\n        listData: null,\n        error: action.error,\n      });\n    case FETCH_POKEDEX_SUCESS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        listData: action.data,\n        error: null,\n      });\n    case FETCH_POKEDEX_START:\n      return Object.assign({}, state, {\n        isFetching: true,\n        error: null,\n      });\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { displaying } from './changeDisplay';\nimport { pokedex } from './changePokedexReducers';\nimport { fetchDataReducer } from './fetchDataReducer';\nimport { fetchPokedexReducer } from './fetchPokedexReducer';\n\nexport const rootReducer = combineReducers({\n  requestPokemon: fetchDataReducer,\n  requestPokedex: fetchPokedexReducer,\n  pokedex,\n  displaying,\n});\n","import { CHANGE_POKEDEX } from '../actions/actionTypes';\n\nexport function pokedex(state = null, action) {\n  switch (action.type) {\n    case CHANGE_POKEDEX:\n      return action.region;\n    default:\n      return state;\n  }\n}\n","import { CHANGE_DISPLAY_TO } from '../actions/actionTypes';\n\nexport function displaying(state = 'pokemon', action) {\n  const type = action.type;\n  switch (type) {\n    case CHANGE_DISPLAY_TO:\n      return action.display;\n    default:\n      return state;\n  }\n}\n","import styled from 'styled-components';\n\nexport const LargeHeader = styled.h1`\n  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n  padding: 1vw;\n`;\n\nLargeHeader.displayName = 'LargeHeader';\n\nexport const Button = styled.button`\n  background-color: white;\n  color: black;\n  border-radius: 2px;\n  size: 20px;\n  border-radius: 3px;\n`;\n\nexport const Section = styled.section`\n  margin: 0px;\n`;\n\nexport const Image = styled.img`\n  box-shadow: 1px 1px 2px grey;\n  border-radius: 5px;\n  border: 1px silver solid;\n  background-color: rgb(233, 233, 233);\n  height: 15vw;\n  width: 15vw;\n`;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { LargeHeader, Button, Image } from './StyledComponents';\nimport styled from 'styled-components';\n\nexport const MediumSection = styled.section`\n  display: block;\n  padding: 2vw 1vw;\n  width 50%;\n  text-align: center;\n`;\n\nconst BACKGROUND_COLORS = {\n  fire: 'radial-gradient(white, rgb(255, 94, 0))',\n  grass: 'radial-gradient(white, rgb(54, 168, 54))',\n  water: 'radial-gradient(white, rgb(67, 142, 255))',\n  flying: 'radial-gradient(silver, rgb(248, 255, 188))',\n  poison: 'radial-gradient(green, rgb(112, 0, 97))',\n  electric: 'radial-gradient(white, rgb(255, 232, 24))',\n  psychic: 'radial-gradient(rgb(217, 92, 255), rgb(94, 54, 168))',\n  ice: 'radial-gradient(silver, rgb(35, 38, 255))',\n  fighting: 'radial-gradient(silver, brown)',\n  ground: 'radial-gradient(black, brown)',\n  rock: 'radial-gradient(brown, grey)',\n  steel: 'radial-gradient(silver, grey)',\n  normal: 'radial-gradient(white, tan)',\n};\n\nconst DEFAULT_COLORS = 'radial-gradient(white, white)';\n\nexport const ImageSection = styled(MediumSection)`\n  background-image: ${props => {\n    return BACKGROUND_COLORS[props.type] || DEFAULT_COLORS;\n  }};\n  border: 2px solid black;\n  border-radius: 4px;\n  box-shadow: 1px 1px silver;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const SmallSection = styled.section`\n  border-bottom: 1px solid silver;\n`;\n\nexport const LargeSection = styled.section`\n  height: fit-content;\n`;\n\nexport function CreateButtonsFromInfo(props) {\n  const { array, type, requestData } = props;\n\n  return (\n    <>\n      {array.map(object => {\n        const name = object[type] ? object[type].name : object.name;\n        return (\n          <Button\n            key={`${name} button`}\n            onClick={() => requestData(name, type)}\n          >\n            {name}\n          </Button>\n        );\n      })}\n    </>\n  );\n}\n\nCreateButtonsFromInfo.propTypes = {\n  array: PropTypes.array,\n  type: PropTypes.string,\n  requestData: PropTypes.func,\n};\n\nfunction nextIndex(current, length){\n  return (current + 1) % length;\n}\n\nexport function ImageDisplay(props) {\n  const { sprites, name } = props;\n  const validSprites = Object.keys(sprites).filter(\n    sprite => sprites[sprite] !== null,\n  );\n  const lengthSprites = validSprites.length;\n  const index = validSprites.indexOf('front_default');\n  const [spriteKey, changeKey] = useState(index);\n\n  useEffect(() => {\n    let rotate = setInterval(() => {\n      changeKey(nextIndex(spriteKey, lengthSprites));\n    }, 2000);\n    return () => clearInterval(rotate);\n  }, [lengthSprites, spriteKey]);\n  return (\n    <Image\n      src={sprites[validSprites[spriteKey]]}\n      alt={name}\n      onClick={() => {\n        changeKey((spriteKey + 1) % lengthSprites);\n      }}\n    />\n  );\n}\n\nImageDisplay.propTypes = {\n  sprites: PropTypes.object,\n  name: PropTypes.string,\n};\n\nexport function PokemonDisplay(props) {\n  const { data, displaying, requestData, isFetching } = props;\n  if (data === null && !isFetching) {\n    requestData('charmander', 'pokemon');\n    return null;\n  }\n  if (displaying !== 'pokemon' || data === null || isFetching) return null;\n\n  const { name, types, moves, abilities, sprites } = data;\n  const type = types[0].type.name;\n  return (\n    <div className={`pokemon-card`}>\n      <LargeHeader>{name.toUpperCase()}</LargeHeader>\n      <ImageSection type={type}>\n        <ImageDisplay sprites={sprites} name={name} />\n      </ImageSection>\n      <SmallSection>\n        <h4>Type</h4>\n        <CreateButtonsFromInfo\n          array={types}\n          type={'type'}\n          requestData={requestData}\n        />\n      </SmallSection>\n      <SmallSection>\n        <h4>Ability</h4>\n        <CreateButtonsFromInfo\n          array={abilities}\n          type={'ability'}\n          requestData={requestData}\n        />\n      </SmallSection>\n      <LargeSection>\n        <h4>Moves</h4>\n        <CreateButtonsFromInfo\n          array={moves}\n          type={'move'}\n          requestData={requestData}\n        />\n      </LargeSection>\n    </div>\n  );\n}\n\nPokemonDisplay.propTypes = {\n  data: PropTypes.object,\n  displaying: PropTypes.string,\n  requestData: PropTypes.func,\n  isFetching: PropTypes.bool,\n};\n","import {\n  FETCH_DATA_ERROR,\n  FETCH_DATA_START,\n  FETCH_DATA_SUCCESS,\n  CHANGE_POKEDEX,\n  CHANGE_DISPLAY_TO,\n  FETCH_POKEDEX_START,\n  FETCH_POKEDEX_ERROR,\n  FETCH_POKEDEX_SUCESS,\n} from './actionTypes';\n\nexport function fetchData(info, type) {\n  return async function requestPokemon(dispatch) {\n    dispatch(fetchDataStart());\n    const response = await fetch(`https://pokeapi.co/api/v2/${type}/${info}`);\n    if (response.status === 200) {\n      const data = await response.json();\n      dispatch(changeDisplay(type));\n      dispatch(fetchDataSuccess(data));\n    } else {\n      const { status, statusText, url } = response;\n      const errorInfo = { status, statusText, url };\n      dispatch(fetchDataError(errorInfo));\n    }\n  };\n}\n\nexport function fetchPokedex(region) {\n  return async function requestPokedex(dispatch) {\n    dispatch(fetchPokedexStart());\n    const response = await fetch(`https://pokeapi.co/api/v2/pokedex/${region}`);\n    if (response.status === 200) {\n      const data = await response.json();\n      dispatch(fetchPokedexSuccess(data));\n    } else {\n      const { status, statusText, url } = response;\n      const errorInfo = { status, statusText, url };\n      dispatch(fetchPokedexError(errorInfo));\n    }\n  };\n}\n\nexport function fetchUrl(url) {\n  return async function requestUrl(dispatch) {\n    dispatch(fetchDataStart());\n    const response = await fetch(url);\n    if (response.status === 200) {\n      const data = await response.json();\n      dispatch(fetchDataSuccess(data));\n    } else {\n      const { status, statusText, url } = response;\n      const errorInfo = { status, statusText, url };\n      dispatch(fetchDataError(errorInfo));\n    }\n  };\n}\n\nexport function fetchDataSuccess(data) {\n  return { type: FETCH_DATA_SUCCESS, data: data };\n}\n\nexport function fetchPokedexSuccess(data) {\n  return { type: FETCH_POKEDEX_SUCESS, data: data };\n}\n\nexport function fetchDataError(error) {\n  return { type: FETCH_DATA_ERROR, error: error };\n}\n\nexport function fetchPokedexError(error) {\n  return { type: FETCH_POKEDEX_ERROR, error: error };\n}\n\nexport function fetchDataStart() {\n  return { type: FETCH_DATA_START };\n}\n\nexport function fetchPokedexStart() {\n  return { type: FETCH_POKEDEX_START };\n}\n\nexport function changePokedex(region) {\n  return { type: CHANGE_POKEDEX, region: region };\n}\n\nexport function changeDisplay(input) {\n  return { type: CHANGE_DISPLAY_TO, display: input };\n}\n","import { connect } from 'react-redux';\nimport { fetchData } from '../actions/actions';\n\nfunction mapStateToProps(state) {\n  return {\n    data: state.requestPokemon.data,\n    displaying: state.displaying,\n    isFetching: state.requestPokemon.isFetching,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    requestData: (input, type) => {\n      dispatch(fetchData(input, type));\n    },\n  };\n}\n\nexport const ViewsContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n);\n","import { AbilityDisplay } from '../views/AbilityDisplay';\nimport { ViewsContainer } from './ViewsContainer';\n\nexport const AbilityContainer = ViewsContainer(AbilityDisplay);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { CreateButtonsFromInfo } from './PokemonDisplay';\nimport { LargeHeader } from './StyledComponents';\n\nexport function AbilityDisplay(props) {\n  const { data, displaying, requestData, isFetching } = props;\n  if (!data || displaying !== 'ability' || isFetching) return null;\n\n  const { name, pokemon, effect_entries } = data;\n  const firstEffect = effect_entries[0].effect;\n  return (\n    <>\n      <LargeHeader>{name.toUpperCase()}</LargeHeader>\n      <h3>Effect</h3>\n      <p>{firstEffect}</p>\n      <h3>Pokemon with {name}</h3>\n      <CreateButtonsFromInfo\n        array={pokemon}\n        type={'pokemon'}\n        requestData={requestData}\n      />\n    </>\n  );\n}\n\nAbilityDisplay.propTypes = {\n  data: PropTypes.object,\n  displaying: PropTypes.string,\n  requestData: PropTypes.func,\n  isFetching: PropTypes.bool,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { LargeHeader } from './StyledComponents';\n\nexport function ErrorView(props) {\n  const { error } = props;\n  if (!error) return null;\n  let errorInfo = 'Unknown Rrror';\n  if (error.status === 404) {\n    errorInfo = 'Unable to find search, please try another one';\n  }\n  return (\n    <>\n      <LargeHeader>Error: {error.status}</LargeHeader>\n      <p>{errorInfo}</p>\n    </>\n  );\n}\n\nErrorView.propTypes = {\n  error: PropTypes.object,\n};\n","import { ErrorView } from '../views/ErrorView';\nimport { connect } from 'react-redux';\n\nfunction mapStateToProps(state) {\n  return {\n    error: state.requestPokemon.error,\n  };\n}\n\nexport const ErrorContainer = connect(\n  mapStateToProps,\n  null,\n)(ErrorView);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { LargeHeader, Image, Section } from './StyledComponents';\nimport styled from 'styled-components';\n\nexport const LargerImage = styled(Image)`\n  height: 200px;\n  width: 200px;\n  border: 0px;\n`;\n\nconst FetchSection = styled(Section)`\n  display: block;\n  text-align: center;\n`;\n\nexport const SPINNING_POKEBALL =\n  'https://media1.tenor.com/images/c59e7bfa31590e3f9eb4925639ddeb88/tenor.gif?itemid=7283217';\n\nexport function FetchingDisplay(props) {\n  const { isFetching } = props;\n\n  if (!isFetching) return null;\n\n  return (\n    <FetchSection>\n      <LargeHeader>Searching</LargeHeader>\n      <LargerImage\n        className=\"spinning-pokeball\"\n        src={SPINNING_POKEBALL}\n        alt=\"SPINNING POKEBALL\"\n      />\n    </FetchSection>\n  );\n}\n\nFetchingDisplay.propTypes = {\n  isFetching: PropTypes.bool,\n};\n","import { FetchingDisplay } from '../views/FetchingDisplay';\nimport { connect } from 'react-redux';\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.requestPokemon.isFetching,\n  };\n}\n\nexport const FetchingContainer = connect(\n  mapStateToProps,\n  null,\n)(FetchingDisplay);\n","import { ListDisplay } from '../views/ListDisplay';\nimport { connect } from 'react-redux';\nimport { fetchUrl, fetchData } from '../actions/actions';\n\nfunction mapStateToProps(state) {\n  return {\n    data: state.requestPokemon.data,\n    displaying: state.displaying,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchUrl: url => dispatch(fetchUrl(url)),\n    requestData: (input, parameter) => dispatch(fetchData(input, parameter)),\n  };\n}\n\nexport const ListContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ListDisplay);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from './StyledComponents';\n\nexport function ListDisplay(props) {\n  const { data, requestData, displaying, fetchUrl } = props;\n  if (!data || !data.count) return null;\n  const { previous, next, results } = data;\n\n  const previousButton = previous ? (\n    <Button\n      key=\"previous-button\"\n      className=\"previous-button\"\n      onClick={() => fetchUrl(previous)}\n    >\n      Previous\n    </Button>\n  ) : null;\n\n  const nextButton = next ? (\n    <Button\n      key=\"next-button\"\n      className=\"next-button\"\n      onClick={() => fetchUrl(next)}\n    >\n      Next\n    </Button>\n  ) : null;\n\n  return (\n    <>\n      {results.map(info => {\n        return (\n          <section key={`${info.name}`}>\n            <p key={`${info.name}-list-par`}>{info.name}</p>\n            <Button\n              key={`${info.name}-list-button`}\n              className=\"view-pokemon-button\"\n              onClick={() => requestData(info.name, displaying)}\n            >\n              View\n            </Button>\n          </section>\n        );\n      })}\n      {previousButton}\n      {nextButton}\n    </>\n  );\n}\n\nListDisplay.propTypes = {\n  data: PropTypes.object,\n  requestData: PropTypes.func,\n  displaying: PropTypes.string,\n  fetchUrl: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, LargeHeader } from './StyledComponents';\nimport styled from 'styled-components';\n\nexport const Select = styled.select`\n  margin: 0 auto;\n  width: fit-content;\n  height: 3vw;\n  background-color: grey;\n  color: black;\n  font-size: 2vw;\n  border-radius: 2px;\n`;\n\nexport const PokedexHeader = styled(LargeHeader)`\n  border-bottom: 1px black solid;\n  text-align: center;\n  font-size: 4vw;\n`;\n\nexport const PokedexDiv = styled.div`\n  background-color: white;\n  font-family: Arial, Helvetica, sans-serif;\n  margin: 0 auto;\n  padding: 5px 0;\n`;\n\nexport function MultipleOptions(props) {\n  const { options } = props;\n  return options.map(option => {\n    return (\n      <option key={option} value={option}>\n        {option.toUpperCase()}\n      </option>\n    );\n  });\n}\n\nexport function PokedexPokemonList(props) {\n  const { data, pokedex, requestData } = props;\n  if (!data) return null;\n  const { pokemon_entries } = data;\n  return (\n    <>\n      <PokedexHeader>{pokedex.toUpperCase()}</PokedexHeader>\n      {pokemon_entries.map(pokemon => {\n        const name = pokemon.pokemon_species.name;\n        return (\n          <Button\n            key={`${name} button`}\n            onClick={() => requestData(name, 'pokemon')}\n          >\n            {name}\n          </Button>\n        );\n      })}\n    </>\n  );\n}\n\nPokedexPokemonList.propTypes = {\n  pokedex: PropTypes.string,\n  data: PropTypes.object,\n  requestData: PropTypes.func,\n  displaying: PropTypes.string,\n};\n\nexport function PokedexDisplay(props) {\n  const { pokedex, changePokedex } = props;\n  if (pokedex === null) {\n    changePokedex('kanto');\n    return null;\n  }\n  const regions = [\n    'kanto',\n    'original-johto',\n    'hoenn',\n    'original-sinnoh',\n    'original-unova',\n    'kalos-central',\n    'kalos-coastal',\n    'kalos-mountain',\n  ];\n  return (\n    <PokedexDiv>\n      <Select\n        onChange={event => changePokedex(event.target.value)}\n        value={pokedex}\n      >\n        <MultipleOptions options={regions} pokedex={pokedex} />\n      </Select>\n    </PokedexDiv>\n  );\n}\n\nPokedexDisplay.propTypes = {\n  isFetching: PropTypes.bool,\n  pokedex: PropTypes.string,\n  changePokedex: PropTypes.func,\n  displaying: PropTypes.string,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from './StyledComponents';\nimport { PokedexDiv } from './PokedexDisplay';\nimport styled from 'styled-components';\n\nconst ENTER_KEY = 13;\n\nconst Input = styled.input`\n  margin: 0 auto;\n  width: 235px;\n`;\n\nexport function ChangeSearchByButtons(props) {\n  const { parameters, changeParameter } = props;\n  const buttons = parameters.map(parameter => {\n    return (\n      <Button\n        key={`${parameter} button`}\n        onClick={() => changeParameter(parameter)}\n      >\n        {parameter.toUpperCase()}\n      </Button>\n    );\n  });\n\n  return <>{buttons}</>;\n}\n\nChangeSearchByButtons.propTypes = {\n  parameters: PropTypes.array,\n  changeParameter: PropTypes.func,\n};\n\nexport function SearchBar(props) {\n  const { requestData } = props;\n  const [parameter, changeParameter] = useState('pokemon');\n  const parameters = [\n    'ability',\n    'pokemon',\n    'type',\n    'move',\n    'berry',\n    'pokemon-color',\n  ];\n\n  return (\n    <PokedexDiv>\n      <ChangeSearchByButtons\n        parameters={parameters}\n        changeParameter={changeParameter}\n      />\n      <h4>SEARCH BY: {parameter.toUpperCase()}</h4>\n      <Input\n        type=\"search\"\n        onKeyDown={event => {\n          if (event.keyCode === ENTER_KEY) {\n            requestData(event.target.value, parameter);\n            event.target.value = '';\n          }\n        }}\n      />\n    </PokedexDiv>\n  );\n}\n\nSearchBar.propTypes = {\n  requestData: PropTypes.func,\n};\n","import { PokedexDisplay } from './PokedexDisplay';\nimport { SearchBar } from './SearchBarDisplay';\nimport React, { useState } from 'react';\nimport { Button } from './StyledComponents';\nimport styled from 'styled-components';\nimport { PropTypes } from 'prop-types';\n\nexport const MenuSection = styled.section`\n  background-color: white;\n  text-align: center;\n  display: block;\n`;\n\nexport const ActiveButton = styled(Button)`\n  ${props => {\n    if (props.active) {\n      return `background-color: silver;\n          border-bottom: 1px solid black;`;\n    }\n  }}\n`;\n\nexport const Nav = styled.section`\n  display: inline-block;\n  text-align: center;\n  width: 100%;\n`;\n\nexport function ToggleMenu(props) {\n  const [view, changeView] = useState('pokedex');\n\n  let display;\n  switch (view) {\n    case 'pokedex':\n      display = (\n        <MenuSection>\n          <PokedexDisplay {...props} />\n        </MenuSection>\n      );\n      break;\n    default:\n      display = (\n        <MenuSection>\n          <SearchBar {...props} />\n        </MenuSection>\n      );\n      break;\n  }\n\n  return (\n    <Nav>\n      <ActiveButton\n        active={view === 'search'}\n        onClick={() => {\n          changeView('pokedex');\n        }}\n      >\n        Pokedex\n      </ActiveButton>\n      <ActiveButton\n        active={view === 'pokedex'}\n        onClick={() => {\n          changeView('search');\n        }}\n      >\n        Search Bar\n      </ActiveButton>\n\n      {display}\n    </Nav>\n  );\n}\n\nToggleMenu.propTypes = {\n  isFetching: PropTypes.bool,\n};\n","import { connect } from 'react-redux';\nimport { ToggleMenu } from '../views/Menu';\nimport { changePokedex, fetchData, fetchPokedex } from '../actions/actions';\n\nfunction mapStateToProps(state) {\n  return {\n    pokedex: state.pokedex,\n    isFetching: state.requestPokedex.isFetching,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changePokedex: region => {\n      dispatch(changePokedex(region));\n      dispatch(fetchPokedex(region));\n    },\n\n    requestData: (input, parameter) => {\n      dispatch(fetchData(input, parameter));\n    },\n  };\n}\n\nexport const MenuContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ToggleMenu);\n","import { ViewsContainer } from './ViewsContainer';\nimport { MoveDisplay } from '../views/MovesDisplay';\n\nexport const MoveContainer = ViewsContainer(MoveDisplay);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, LargeHeader } from './StyledComponents';\n\nexport function MoveDisplay(props) {\n  const { data, displaying, requestData, isFetching } = props;\n  if (data === null || displaying !== 'move' || isFetching) return null;\n  const { accuracy, effect_entries, name, power, pp, type } = data;\n  const accuracyDisplay = accuracy ? accuracy : 'Does not apply';\n  const effectDisplay =\n    effect_entries.length === 0\n      ? 'Move has no description'\n      : effect_entries[0].effect;\n  const powerDisplay = power ? power : 'Does not apply';\n\n  return (\n    <>\n      <LargeHeader>{name.toUpperCase()}</LargeHeader>\n      <h6>Type: </h6>\n      <Button onClick={() => requestData(type.name, 'type')}>\n        {type.name}\n      </Button>\n      <p>{effectDisplay}</p>\n\n      <p>Accuracy: {accuracyDisplay}</p>\n      <p>PP: {pp}</p>\n      <p>Power: {powerDisplay}</p>\n    </>\n  );\n}\n\nMoveDisplay.propTypes = {\n  data: PropTypes.object,\n  displaying: PropTypes.string,\n  requestData: PropTypes.func,\n  isFetching: PropTypes.bool,\n};\n","import { ViewsContainer } from './ViewsContainer';\nimport { PokemonDisplay } from '../views/PokemonDisplay';\n\nexport const PokemonContainer = ViewsContainer(PokemonDisplay);\n","import { TypeDisplay } from '../views/TypeDisplay';\nimport { ViewsContainer } from './ViewsContainer';\n\nexport const TypeContainer = ViewsContainer(TypeDisplay);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CreateButtonsFromInfo } from './PokemonDisplay';\nimport { LargeHeader } from './StyledComponents';\n\nexport function TypeDisplay(props) {\n  const { data, displaying, requestData, isFetching } = props;\n  if (data === null || displaying !== 'type' || isFetching) return null;\n  const { name, pokemon, damage_relations, moves } = data;\n  const {\n    double_damage_from,\n    double_damage_to,\n    half_damage_from,\n    half_damage_to,\n    no_damage_from,\n    no_damage_to,\n  } = damage_relations;\n\n  return (\n    <>\n      <LargeHeader>{name.toUpperCase()}</LargeHeader>\n      <h4>Double Damage To:</h4>\n      <CreateButtonsFromInfo\n        array={double_damage_to}\n        type={'type'}\n        requestData={requestData}\n      />\n      <h4>Half Damage From:</h4>\n      <CreateButtonsFromInfo\n        array={half_damage_from}\n        type={'type'}\n        requestData={requestData}\n      />\n      <h4>No Damage From:</h4>\n      <CreateButtonsFromInfo\n        array={no_damage_from}\n        type={'type'}\n        requestData={requestData}\n      />\n      <h4>Double Damage From:</h4>\n      <CreateButtonsFromInfo\n        array={double_damage_from}\n        type={'type'}\n        requestData={requestData}\n      />\n      <h4>Half Damage To:</h4>\n      <CreateButtonsFromInfo\n        array={half_damage_to}\n        type={'type'}\n        requestData={requestData}\n      />\n      <h4>No Damage To:</h4>\n      <CreateButtonsFromInfo\n        array={no_damage_to}\n        type={'type'}\n        requestData={requestData}\n      />\n      <h3>Pokemon</h3>\n      <CreateButtonsFromInfo\n        array={pokemon}\n        type={'pokemon'}\n        requestData={requestData}\n      />\n      <h3>Moves</h3>\n      <CreateButtonsFromInfo\n        array={moves}\n        type={'move'}\n        requestData={requestData}\n      />\n    </>\n  );\n}\n\nTypeDisplay.propTypes = {\n  data: PropTypes.object,\n  displaying: PropTypes.string,\n  requestData: PropTypes.func,\n  isFetching: PropTypes.bool,\n};\n","import { PokedexPokemonList } from '../views/PokedexDisplay';\nimport { connect } from 'react-redux';\nimport { fetchData } from '../actions/actions';\n\nfunction mapStateToProps(state) {\n  return {\n    pokedex: state.pokedex,\n    data: state.requestPokedex.listData,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    requestData: (input, parameter) => {\n      dispatch(fetchData(input, parameter));\n    },\n  };\n}\n\nexport const PokedexContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(PokedexPokemonList);\n","import { ViewsContainer } from './ViewsContainer';\nimport { BerryView } from '../views/BerryView';\n\nexport const BerryContainer = ViewsContainer(BerryView);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { LargeHeader } from './StyledComponents';\n\nexport function BerryView(props) {\n  const { data, displaying, isFetching } = props;\n  if (data === null || displaying !== 'berry' || isFetching) return null;\n\n  const {\n    name,\n    growth_time,\n    firmness,\n    max_harvest,\n    size,\n    smoothness,\n    soil_dryness,\n    flavors,\n  } = data;\n\n  return (\n    <>\n      <LargeHeader>{name.toUpperCase()}</LargeHeader>\n\n      <p>Grow Time: {growth_time}</p>\n      <p>Firmness: {firmness.name}</p>\n      <p>Max Harvest: {max_harvest}</p>\n      <p>Size: {size}</p>\n      <p>Smoothness: {smoothness}</p>\n      <p>Soil Dryness: {soil_dryness}</p>\n      <p>Flavors: {flavors.map(flavor => flavor.flavor.name).join('  ')}</p>\n    </>\n  );\n}\n\nBerryView.propTypes = {\n  data: PropTypes.object,\n  displaying: PropTypes.string,\n  isFetching: PropTypes.bool,\n};\n","import { ViewsContainer } from './ViewsContainer';\nimport { ColorView } from '../views/ColorView';\n\nexport const ColorContainer = ViewsContainer(ColorView);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, LargeHeader } from './StyledComponents';\n\nexport function ColorView(props) {\n  const { data, displaying, requestData, isFetching } = props;\n  if (data === null || displaying !== 'pokemon-color' || isFetching)\n    return null;\n  const { name, pokemon_species } = data;\n\n  return (\n    <>\n      <LargeHeader>{name.toUpperCase()} POKEMON</LargeHeader>\n      {pokemon_species.map(info => {\n        return (\n          <section key={`${info.name}`}>\n            <p key={`${info.name}-list-par`}>{info.name}</p>\n            <Button\n              key={`${info.name}-list-button`}\n              className=\"view-pokemon-button\"\n              onClick={() => requestData(info.name, 'pokemon')}\n            >\n              View\n            </Button>\n          </section>\n        );\n      })}\n      ;\n    </>\n  );\n}\n\nColorView.propTypes = {\n  data: PropTypes.object,\n  displaying: PropTypes.string,\n  requestData: PropTypes.func,\n  isFetching: PropTypes.bool,\n};\n","import { FetchingDisplay } from '../views/FetchingDisplay';\nimport { connect } from 'react-redux';\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.requestPokedex.isFetching,\n  };\n}\n\nexport const PokedexFetchingContainer = connect(\n  mapStateToProps,\n  null,\n)(FetchingDisplay);\n","import { ErrorView } from '../views/ErrorView';\nimport { connect } from 'react-redux';\n\nfunction mapStateToProps(state) {\n  return {\n    error: state.requestPokedex.error,\n  };\n}\n\nexport const PokedexErrorContainer = connect(\n  mapStateToProps,\n  null,\n)(ErrorView);\n","import React from 'react';\nimport { AbilityContainer } from './AbilityContainer';\nimport { ErrorContainer } from './ErrorContainer';\nimport { FetchingContainer } from './FetchingContainer';\nimport { ListContainer } from './ListContainer';\nimport { MenuContainer } from './MenuContainer';\nimport { MoveContainer } from './MoveContainer';\nimport { PokemonContainer } from './PokemonContainer';\nimport { TypeContainer } from './TypeContainer';\nimport { PokedexContainer } from './PokedexContainer';\nimport { BerryContainer } from './BerryContainer';\nimport { ColorContainer } from './ColorContainer';\nimport { PokedexFetchingContainer } from './PokedexFetching';\nimport styled from 'styled-components';\nimport { PokedexErrorContainer } from './PokedexError';\nimport { LargeHeader } from '../views/StyledComponents';\n\nconst DisplayDiv = styled.div`\n  width: 46vw;\n  height: 80vh;\n  top: 12%;\n  border-radius: 5px;\n  box-shadow: 3px 3px 5px black, 4px 4px 5px grey, 3px 3px 5px grey,\n    4px 4px 5px grey;\n  overflow: scroll;\n  background-color: white;\n  margin: 1vw;\n`;\n\nexport const WrapperDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  align-item: space-evenly;\n  justify-content: center;\n`;\n\nconst Container = styled.div`\n  text-align: center;\n  background-image: linear-gradient(to bottom right, white, red);\n  height: 100vh;\n  width: 100vw;\n`;\n\nexport function RootContainer() {\n  return (\n    <Container>\n      <LargeHeader>\n        <span className=\"main__header\">Pokedex</span>\n      </LargeHeader>\n      <WrapperDiv>\n        <DisplayDiv>\n          <FetchingContainer />\n          <PokemonContainer />\n          <MoveContainer />\n          <TypeContainer />\n          <AbilityContainer />\n          <BerryContainer />\n          <ColorContainer />\n          <ErrorContainer />\n        </DisplayDiv>\n\n        <DisplayDiv>\n          <PokedexFetchingContainer />\n          <MenuContainer />\n          <ListContainer />\n          <PokedexContainer />\n          <PokedexErrorContainer />\n        </DisplayDiv>\n      </WrapperDiv>\n    </Container>\n  );\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { configureStore } from './configureStore';\nimport { RootContainer } from './containers/RootContainer';\n\nconst store = configureStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <RootContainer />\n    </Provider>\n  );\n}\n\nexport default App;\n","import thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { createStore, applyMiddleware } from 'redux';\nimport { rootReducer } from './reducers/rootReducer';\n\nexport function configureStore() {\n  const middlewares = [thunk];\n  if (process.env.NODE_ENV === 'development') {\n    middlewares.push(logger);\n  }\n\n  const store = createStore(rootReducer, applyMiddleware(...middlewares));\n  return store;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}