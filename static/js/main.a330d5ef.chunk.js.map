{"version":3,"sources":["actions/actionTypes.js","reducers/fetchDataReducer.js","reducers/rootReducer.js","reducers/changePokedexReducers.js","reducers/changeDisplay.js","views/StyledComponents.js","views/PokemonDisplay.js","actions/actions.js","containers/ViewsContainer.js","containers/AbilityContainer.js","views/AbilityDisplay.js","containers/ErrorContainer.js","views/ErrorView.js","views/FetchingDisplay.js","containers/FetchingContainer.js","containers/ListContainer.js","views/ListDisplay.js","views/PokedexDisplay.js","views/SearchBarDisplay.js","views/Menu.js","containers/MenuContainer.js","containers/MoveContainer.js","views/MovesDisplay.js","containers/PokemonContainer.js","containers/TypeContainer.js","views/TypeDisplay.js","containers/PokedexContainer.js","containers/BerryContainer.js","views/BerryView.js","containers/ColorContainer.js","views/ColorView.js","containers/RootContainer.js","App.js","configureStore.js","serviceWorker.js","index.js"],"names":["FETCH_DATA_START","FETCH_DATA_SUCCESS","FETCH_DATA_ERROR","CHANGE_POKEDEX","CHANGE_DISPLAY_TO","initialState","isFetching","data","listData","error","pokedexi","kanto","original-johto","hoenn","original-sinnoh","original-unova","kalos-central","kalos-coastal","kalos-mountain","rootReducer","combineReducers","requestPokemon","state","arguments","length","undefined","action","type","Object","assign","name","pokedex","region","displaying","display","LargeHeader","styled","h1","_templateObject","displayName","Button","button","_templateObject2","Section","section","_templateObject3","Image","img","_templateObject4","MediumSection","PokemonDisplay_templateObject","BACKGROUND_COLORS","fire","grass","water","flying","poison","electric","psychic","ice","fighting","ground","rock","steel","normal","ImageSection","PokemonDisplay_templateObject2","props","SmallSection","PokemonDisplay_templateObject3","LargeSection","PokemonDisplay_templateObject4","CreateButtonsFromInfo","array","requestData","react_default","a","createElement","Fragment","map","object","key","concat","onClick","ImageDisplay","_useState","useState","_useState2","slicedToArray","index","addIndex","sprites","spritesValues","values","filter","sprite","currentSprite","src","alt","fetchData","info","_requestPokemon","asyncToGenerator","regenerator_default","mark","_callee","dispatch","response","status","statusText","url","wrap","_context","prev","next","fetchDataStart","fetch","sent","json","fetchDataSuccess","fetchDataError","stop","_x","apply","this","ViewsContainer","connect","input","AbilityContainer","pokemon","firstEffect","effect_entries","effect","toUpperCase","ErrorContainer","errorInfo","LargerImage","FetchingDisplay_templateObject","FetchSection","FetchingDisplay_templateObject2","SPINNING_POKEBALL","FetchingContainer","className","ListContainer","fetchUrl","_requestUrl","_callee2","_url","_context2","_x2","parameter","count","previous","results","previousButton","nextButton","Select","select","PokedexDisplay_templateObject","PokedexHeader","PokedexDisplay_templateObject2","PokedexDiv","div","PokedexDisplay_templateObject3","MultipleOptions","options","option","value","PokedexDisplay","changePokedex","onChange","event","target","ENTER_KEY","Input","SearchBarDisplay_templateObject","ChangeSearchByButtons","parameters","changeParameter","buttons","SearchBar","onKeyDown","keyCode","MenuSection","Menu_templateObject","ActiveButton","Menu_templateObject2","active","Nav","Menu_templateObject3","MenuContainer","view","changeView","MoveContainer","accuracy","power","pp","accuracyDisplay","effectDisplay","powerDisplay","PokemonContainer","types","moves","abilities","TypeContainer","damage_relations","double_damage_from","double_damage_to","half_damage_from","half_damage_to","no_damage_from","no_damage_to","PokedexContainer","pokemon_entries","pokemon_species","BerryContainer","growth_time","firmness","max_harvest","size","smoothness","soil_dryness","flavors","flavor","join","ColorContainer","DisplayDiv","RootContainer_templateObject","WrapperDiv","RootContainer_templateObject2","RootContainer","store","middlewares","thunk","createStore","applyMiddleware","configureStore","App","es","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oOAAaA,EAAmB,mBACnBC,EAAqB,qBACrBC,EAAmB,mBACnBC,EAAiB,iBACjBC,EAAoB,qBCEjC,IAAMC,EAAe,CACnBC,YAAY,EACZC,KAAM,KACNC,SAAU,KACVC,MAAO,MAEHC,EAAW,CACfC,OAAO,EACPC,kBAAkB,EAClBC,OAAO,EACPC,mBAAmB,EACnBC,kBAAkB,EAClBC,iBAAiB,EACjBC,iBAAiB,EACjBC,kBAAkB,GCfb,IAAMC,EAAcC,YAAgB,CACzCC,eDgBK,WAAwD,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBlB,EAAcqB,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7D,OAAQC,EAAOC,MACb,KAAKzB,EACH,OAAO0B,OAAOC,OAAO,GAAIP,EAAO,CAC9BhB,YAAY,EACZC,KAAM,KACNC,SAAU,KACVC,MAAOiB,EAAOjB,QAElB,KAAKR,EACH,OAAIS,EAASgB,EAAOnB,KAAKuB,MAChBF,OAAOC,OAAO,GAAIP,EAAO,CAC9BhB,YAAY,EACZE,SAAUkB,EAAOnB,KACjBA,KAAMe,EAAMf,KACZE,MAAO,OAGFmB,OAAOC,OAAO,GAAIP,EAAO,CAC9BhB,YAAY,EACZE,SAAUc,EAAMd,SAChBD,KAAMmB,EAAOnB,KACbE,MAAO,OAGb,KAAKT,EACH,OAAO4B,OAAOC,OAAO,GAAIP,EAAO,CAC9BhB,YAAY,EACZG,MAAO,OAEX,QACE,OAAOa,IC9CXS,QCLK,WAA0C,IAAzBT,EAAyBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,QAASG,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQC,EAAOC,MACb,KAAKxB,EACH,OAAOuB,EAAOM,OAChB,QACE,OAAOV,IDCXW,WENK,WAA+C,IAA3BX,EAA2BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnB,UAAWG,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAEpD,OADaC,EAAOC,MAElB,KAAKvB,EACH,OAAOsB,EAAOQ,QAChB,QACE,OAAOZ,goBCNN,IAAMa,EAAcC,IAAOC,GAAVC,KAKxBH,EAAYI,YAAc,cAEnB,IAAMC,EAASJ,IAAOK,OAAVC,KAQNC,EAAUP,IAAOQ,QAAVC,KAIPC,EAAQV,IAAOW,IAAVC,gjBChBX,IAAMC,EAAgBb,IAAOQ,QAAVM,KAQpBC,EAAoB,CACxBC,KAAM,0CACNC,MAAO,2CACPC,MAAO,4CACPC,OAAQ,8CACRC,OAAQ,0CACRC,SAAU,4CACVC,QAAS,uDACTC,IAAK,4CACLC,SAAU,iCACVC,OAAQ,gCACRC,KAAM,+BACNC,MAAO,gCACPC,OAAQ,+BAKGC,EAAe7B,YAAOa,EAAPb,CAAH8B,IACH,SAAAC,GAClB,OAAOhB,EAAkBgB,EAAMxC,OAJZ,kCAWVyC,EAAehC,IAAOQ,QAAVyB,KAKZC,EAAelC,IAAOQ,QAAV2B,KAIlB,SAASC,EAAsBL,GAAO,IACnCM,EAA6BN,EAA7BM,MAAO9C,EAAsBwC,EAAtBxC,KAAM+C,EAAgBP,EAAhBO,YAErB,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACGL,EAAMM,IAAI,SAAAC,GACT,IAAMlD,EAAOkD,EAAOrD,GAAQqD,EAAOrD,GAAMG,KAAOkD,EAAOlD,KACvD,OACE6C,EAAAC,EAAAC,cAACrC,EAAD,CACEyC,IAAG,GAAAC,OAAKpD,EAAL,WACHqD,QAAS,kBAAMT,EAAY5C,EAAMH,KAEhCG,MAcN,SAASsD,EAAajB,GAC3B,IADkCkB,EAERC,mBADE,GADMC,EAAA3D,OAAA4D,EAAA,EAAA5D,CAAAyD,EAAA,GAE3BI,EAF2BF,EAAA,GAEpBG,EAFoBH,EAAA,GAG1BI,EAAkBxB,EAAlBwB,QAAS7D,EAASqC,EAATrC,KACX8D,EAAgBhE,OAAOiE,OAAOF,GAASG,OAC3C,SAAAC,GAAM,OAAe,OAAXA,IAENC,EAAgBP,EAAQG,EAAcpE,OAC5C,OACEmD,EAAAC,EAAAC,cAAC/B,EAAD,CACEmD,IAAKL,EAAcI,GACnBE,IAAKpE,EACLqD,QAAS,kBAAMO,EAASD,EAAQ,kCC/E/B,SAASU,EAAUC,EAAMlE,EAASP,GAEvC,OADAA,OAAgBF,IAATE,EAAqBO,EAAUP,EACtC,eAAA0E,EAAAzE,OAAA0E,EAAA,EAAA1E,CAAA2E,EAAA3B,EAAA4B,KAAO,SAAAC,EAA8BC,GAA9B,IAAAC,EAAApG,EAAAqG,EAAAC,EAAAC,EAAA,OAAAP,EAAA3B,EAAAmC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACLR,EAASS,KADJH,EAAAE,KAAA,EAEkBE,MAAK,6BAAAlC,OAA8BvD,EAA9B,KAAAuD,OAAsCkB,IAF7D,UAGmB,OADlBO,EAFDK,EAAAK,MAGQT,OAHR,CAAAI,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAIgBP,EAASW,OAJzB,OAIG/G,EAJHyG,EAAAK,KAKHX,EA0CG,CAAE/E,KAAMvB,EAAmB8B,QA1CPA,IACvBwE,EAASa,EAAiBhH,IANvByG,EAAAE,KAAA,iBAQKN,EAA4BD,EAA5BC,OAAQC,EAAoBF,EAApBE,WAAYC,EAAQH,EAARG,IAE5BJ,EAASc,EADS,CAAEZ,SAAQC,aAAYC,SATrC,yBAAAE,EAAAS,SAAAhB,MAAP,gBAAAiB,GAAA,OAAArB,EAAAsB,MAAAC,KAAArG,YAAA,GA8BK,SAASgG,EAAiBhH,GAC/B,MAAO,CAAEoB,KAAM1B,EAAoBM,KAAMA,GAGpC,SAASiH,EAAe/G,GAC7B,MAAO,CAAEkB,KAAMzB,EAAkBO,MAAOA,GAGnC,SAAS0G,IACd,MAAO,CAAExF,KAAM3B,GC9BV,IAAM6H,EAAiBC,YAhB9B,SAAyBxG,GACvB,MAAO,CACLf,KAAMe,EAAMD,eAAed,KAC3B0B,WAAYX,EAAMW,WAClB3B,WAAYgB,EAAMD,eAAef,aAIrC,SAA4BoG,GAC1B,MAAO,CACLhC,YAAa,SAACqD,EAAOpG,GACnB+E,EAASP,EAAU4B,EAAOpG,QCXnBqG,EAAmBH,ECEzB,SAAwB1D,GAAO,IAC5B5D,EAA8C4D,EAA9C5D,KAAM0B,EAAwCkC,EAAxClC,WAAYyC,EAA4BP,EAA5BO,YAAapE,EAAe6D,EAAf7D,WACvC,IAAKC,GAAuB,YAAf0B,GAA4B3B,EAAY,OAAO,KAFxB,IAI5BwB,EAAkCvB,EAAlCuB,KAAMmG,EAA4B1H,EAA5B0H,QACRC,EADoC3H,EAAnB4H,eACY,GAAGC,OACtC,OACEzD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAC1C,EAAD,KAAcL,EAAKuG,eACnB1D,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SAAIqD,GACJvD,EAAAC,EAAAC,cAAA,0BAAkB/C,GAClB6C,EAAAC,EAAAC,cAACL,EAAD,CACEC,MAAOwD,EACPtG,KAAM,UACN+C,YAAaA,OCXd,IAAM4D,EAAiBR,YAN9B,SAAyBxG,GACvB,MAAO,CACLb,MAAOa,EAAMD,eAAeZ,QAM9B,KAF4BqH,CCLvB,SAAmB3D,GAAO,IACvB1D,EAAU0D,EAAV1D,MACR,IAAKA,EAAO,OAAO,KACnB,IAAI8H,EAAY,gBAIhB,OAHqB,MAAjB9H,EAAMmG,SACR2B,EAAY,iDAGZ5D,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAC1C,EAAD,eAAqB1B,EAAMmG,QAC3BjC,EAAAC,EAAAC,cAAA,SAAI0D,iPCTH,IAAMC,EAAcpG,YAAOU,EAAPV,CAAHqG,KAMlBC,EAAetG,YAAOO,EAAPP,CAAHuG,KAKLC,GACX,4FCRK,IAAMC,GAAoBf,YANjC,SAAyBxG,GACvB,MAAO,CACLhB,WAAYgB,EAAMD,eAAef,aAMnC,KAF+BwH,CDU1B,SAAyB3D,GAG9B,OAFuBA,EAAf7D,WAKNqE,EAAAC,EAAAC,cAAC6D,EAAD,KACE/D,EAAAC,EAAAC,cAAC1C,EAAD,kBACAwC,EAAAC,EAAAC,cAAC2D,EAAD,CACEM,UAAU,oBACV7C,IAAK2C,GACL1C,IAAI,uBARc,OEJnB,IAAM6C,GAAgBjB,YAd7B,SAAyBxG,GACvB,MAAO,CACLf,KAAMe,EAAMD,eAAed,KAC3B0B,WAAYX,EAAMW,aAItB,SAA4ByE,GAC1B,MAAO,CACLsC,SAAU,SAAAlC,GAAG,OAAIJ,ERYd,SAAkBI,GACvB,sBAAAmC,EAAArH,OAAA0E,EAAA,EAAA1E,CAAA2E,EAAA3B,EAAA4B,KAAO,SAAA0C,EAA0BxC,GAA1B,IAAAC,EAAApG,EAAAqG,EAAAC,EAAAsC,EAAA,OAAA5C,EAAA3B,EAAAmC,KAAA,SAAAqC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,cACLR,EAASS,KADJiC,EAAAlC,KAAA,EAEkBE,MAAMN,GAFxB,UAGmB,OADlBH,EAFDyC,EAAA/B,MAGQT,OAHR,CAAAwC,EAAAlC,KAAA,gBAAAkC,EAAAlC,KAAA,EAIgBP,EAASW,OAJzB,OAIG/G,EAJH6I,EAAA/B,KAKHX,EAASa,EAAiBhH,IALvB6I,EAAAlC,KAAA,iBAOKN,EAA4BD,EAA5BC,OAAQC,EAAoBF,EAApBE,WAAYC,EAAQH,EAARG,IAE5BJ,EAASc,EADS,CAAEZ,SAAQC,aAAYC,SARrC,yBAAAsC,EAAA3B,SAAAyB,MAAP,gBAAAG,GAAA,OAAAJ,EAAAtB,MAAAC,KAAArG,YAAA,GQb4ByH,CAASlC,KACnCpC,YAAa,SAACqD,EAAOuB,GAAR,OAAsB5C,EAASP,EAAU4B,EAAOuB,OAIpCxB,CCdtB,SAAqB3D,GAAO,IACzB5D,EAA4C4D,EAA5C5D,KAAMmE,EAAsCP,EAAtCO,YAAazC,EAAyBkC,EAAzBlC,WAAY+G,EAAa7E,EAAb6E,SACvC,IAAKzI,IAASA,EAAKgJ,MAAO,OAAO,KAFA,IAGzBC,EAA4BjJ,EAA5BiJ,SAAUtC,EAAkB3G,EAAlB2G,KAAMuC,EAAYlJ,EAAZkJ,QAElBC,EAAiBF,EACrB7E,EAAAC,EAAAC,cAACrC,EAAD,CACEyC,IAAI,kBACJ6D,UAAU,kBACV3D,QAAS,kBAAM6D,EAASQ,KAH1B,YAOE,KAEEG,EAAazC,EACjBvC,EAAAC,EAAAC,cAACrC,EAAD,CACEyC,IAAI,cACJ6D,UAAU,cACV3D,QAAS,kBAAM6D,EAAS9B,KAH1B,QAOE,KAEJ,OACEvC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACG2E,EAAQ1E,IAAI,SAAAqB,GACX,OACEzB,EAAAC,EAAAC,cAAA,WAASI,IAAG,GAAAC,OAAKkB,EAAKtE,OACpB6C,EAAAC,EAAAC,cAAA,KAAGI,IAAG,GAAAC,OAAKkB,EAAKtE,KAAV,cAA4BsE,EAAKtE,MACvC6C,EAAAC,EAAAC,cAACrC,EAAD,CACEyC,IAAG,GAAAC,OAAKkB,EAAKtE,KAAV,gBACHgH,UAAU,sBACV3D,QAAS,kBAAMT,EAAY0B,EAAKtE,KAAMG,KAHxC,WAULyH,EACAC,0jBCzCA,IAAMC,GAASxH,IAAOyH,OAAVC,MAWNC,GAAgB3H,YAAOD,EAAPC,CAAH4H,MAKbC,GAAa7H,IAAO8H,IAAVC,MAOhB,SAASC,GAAgBjG,GAE9B,OADoBA,EAAZkG,QACOtF,IAAI,SAAAuF,GACjB,OACE3F,EAAAC,EAAAC,cAAA,UAAQI,IAAKqF,EAAQC,MAAOD,GACzBA,EAAOjC,iBAmCT,SAASmC,GAAerG,GAAO,IAC5BsG,EAA8BtG,EAA9BsG,cAAexI,EAAekC,EAAflC,WAYvB,OACE0C,EAAAC,EAAAC,cAACoF,GAAD,KACEtF,EAAAC,EAAAC,cAAC+E,GAAD,CACEc,SAAU,SAAAC,GAAK,OACbF,EAAcE,EAAMC,OAAOL,MAAOtI,EAAY,aAGhD0C,EAAAC,EAAAC,cAACuF,GAAD,CAAiBC,QAjBP,CACd,QACA,iBACA,QACA,kBACA,iBACA,gBACA,gBACA,mICzEJ,IAAMQ,GAAY,GAEZC,GAAQ1I,IAAO2F,MAAVgD,MAKJ,SAASC,GAAsB7G,GAAO,IACnC8G,EAAgC9G,EAAhC8G,WAAYC,EAAoB/G,EAApB+G,gBACdC,EAAUF,EAAWlG,IAAI,SAAAuE,GAC7B,OACE3E,EAAAC,EAAAC,cAACrC,EAAD,CACEyC,IAAG,GAAAC,OAAKoE,EAAL,WACHnE,QAAS,kBAAM+F,EAAgB5B,KAE9BA,EAAUjB,iBAKjB,OAAO1D,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KAAGqG,GAQL,SAASC,GAAUjH,GAAO,IACvBO,EAAgBP,EAAhBO,YADuBW,EAEMC,mBAAS,WAFfC,EAAA3D,OAAA4D,EAAA,EAAA5D,CAAAyD,EAAA,GAExBiE,EAFwB/D,EAAA,GAEb2F,EAFa3F,EAAA,GAY/B,OACEZ,EAAAC,EAAAC,cAACoF,GAAD,KACEtF,EAAAC,EAAAC,cAACmG,GAAD,CACEC,WAZa,CACjB,UACA,UACA,OACA,OACA,QACA,iBAOIC,gBAAiBA,IAEnBvG,EAAAC,EAAAC,cAAA,wBAAgByE,EAAUjB,eAC1B1D,EAAAC,EAAAC,cAACiG,GAAD,CACEnJ,KAAK,SACL0J,UAAW,SAAAV,GACLA,EAAMW,UAAYT,KACpBnG,EAAYiG,EAAMC,OAAOL,MAAOjB,GAChCqB,EAAMC,OAAOL,MAAQ,iXCpD1B,IAAMgB,GAAcnJ,IAAOQ,QAAV4I,MAMXC,GAAerJ,YAAOI,EAAPJ,CAAHsJ,KACrB,SAAAvH,GACA,GAAIA,EAAMwH,OACR,+EAMOC,GAAMxJ,IAAOQ,QAAViJ,MCKT,IAAMC,GAAgBhE,YAtB7B,SAAyBxG,GACvB,MAAO,CACLS,QAAST,EAAMS,QACfxB,KAAMe,EAAMD,eAAed,KAC3B0B,WAAYX,EAAMW,WAClB3B,WAAYgB,EAAMD,eAAef,aAIrC,SAA4BoG,GAC1B,MAAO,CACL+D,cAAe,SAAC1C,EAAO7F,EAASP,GAC9B+E,EbqCG,CAAE/E,KAAMxB,EAAgB6B,OarCJ+F,IACvBrB,EAASP,EAAU4B,EAAO7F,EAASP,KAGrC+C,YAAa,SAACqD,EAAOuB,GACnB5C,EAASP,EAAU4B,EAAOuB,OAKHxB,CDCtB,SAAoB3D,GAAO,IAG5BjC,EAH4BmD,EACLC,mBAAS,WADJC,EAAA3D,OAAA4D,EAAA,EAAA5D,CAAAyD,EAAA,GACzB0G,EADyBxG,EAAA,GACnByG,EADmBzG,EAAA,GAIhC,OAAQwG,GACN,IAAK,UACH7J,EACEyC,EAAAC,EAAAC,cAAC0G,GAAD,KACE5G,EAAAC,EAAAC,cAAC2F,GAAmBrG,IAGxB,MACF,QACEjC,EACEyC,EAAAC,EAAAC,cAAC0G,GAAD,KACE5G,EAAAC,EAAAC,cAACuG,GAAcjH,IAMvB,OACEQ,EAAAC,EAAAC,cAAC+G,GAAD,KACEjH,EAAAC,EAAAC,cAAC4G,GAAD,CACEE,OAAiB,WAATI,EACR5G,QAAS,WACP6G,EAAW,aAHf,WAQArH,EAAAC,EAAAC,cAAC4G,GAAD,CACEE,OAAiB,YAATI,EACR5G,QAAS,WACP6G,EAAW,YAHf,cASC9J,KEhEA,IAAM+J,GAAgBpE,ECCtB,SAAqB1D,GAAO,IACzB5D,EAA8C4D,EAA9C5D,KAAM0B,EAAwCkC,EAAxClC,WAAYyC,EAA4BP,EAA5BO,YAAapE,EAAe6D,EAAf7D,WACvC,GAAa,OAATC,GAAgC,SAAf0B,GAAyB3B,EAAY,OAAO,KAFhC,IAGzB4L,EAAoD3L,EAApD2L,SAAU/D,EAA0C5H,EAA1C4H,eAAgBrG,EAA0BvB,EAA1BuB,KAAMqK,EAAoB5L,EAApB4L,MAAOC,EAAa7L,EAAb6L,GAAIzK,EAASpB,EAAToB,KAC7C0K,EAAkBH,GAAsB,iBACxCI,EACsB,IAA1BnE,EAAe3G,OACX,0BACA2G,EAAe,GAAGC,OAClBmE,EAAeJ,GAAgB,iBAErC,OACExH,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAC1C,EAAD,KAAcL,EAAKuG,eACnB1D,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAACrC,EAAD,CAAQ2C,QAAS,kBAAMT,EAAY/C,EAAKG,KAAM,UAC3CH,EAAKG,MAER6C,EAAAC,EAAAC,cAAA,SAAIyH,GAEJ3H,EAAAC,EAAAC,cAAA,sBAAcwH,GACd1H,EAAAC,EAAAC,cAAA,gBAAQuH,GACRzH,EAAAC,EAAAC,cAAA,mBAAW0H,MCvBJC,GAAmB3E,EjB8FzB,SAAwB1D,GAAO,IAC5B5D,EAA8C4D,EAA9C5D,KAAM0B,EAAwCkC,EAAxClC,WAAYyC,EAA4BP,EAA5BO,YAAapE,EAAe6D,EAAf7D,WACvC,GAAa,OAATC,IAAkBD,EAEpB,OADAoE,EAAY,aAAc,WACnB,KAET,GAAmB,YAAfzC,GAAqC,OAAT1B,GAAiBD,EAAY,OAAO,KANhC,IAQ5BwB,EAA2CvB,EAA3CuB,KAAM2K,EAAqClM,EAArCkM,MAAOC,EAA8BnM,EAA9BmM,MAAOC,EAAuBpM,EAAvBoM,UAAWhH,EAAYpF,EAAZoF,QACjChE,EAAO8K,EAAM,GAAG9K,KAAKG,KAC3B,OACE6C,EAAAC,EAAAC,cAAA,OAAKiE,UAAS,gBACZnE,EAAAC,EAAAC,cAAC5B,EAAD,KACE0B,EAAAC,EAAAC,cAAC1C,EAAD,KAAcL,EAAKuG,gBAErB1D,EAAAC,EAAAC,cAACZ,EAAD,CAActC,KAAMA,GAClBgD,EAAAC,EAAAC,cAACO,EAAD,CAAcO,QAASA,EAAS7D,KAAMA,KAExC6C,EAAAC,EAAAC,cAACT,EAAD,KACEO,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAACL,EAAD,CACEC,MAAOgI,EACP9K,KAAM,OACN+C,YAAaA,KAGjBC,EAAAC,EAAAC,cAACT,EAAD,KACEO,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAACL,EAAD,CACEC,MAAOkI,EACPhL,KAAM,UACN+C,YAAaA,KAGjBC,EAAAC,EAAAC,cAACP,EAAD,KACEK,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAACL,EAAD,CACEC,MAAOiI,EACP/K,KAAM,OACN+C,YAAaA,QkBrIhB,IAAMkI,GAAgB/E,ECEtB,SAAqB1D,GAAO,IACzB5D,EAA8C4D,EAA9C5D,KAAM0B,EAAwCkC,EAAxClC,WAAYyC,EAA4BP,EAA5BO,YAAapE,EAAe6D,EAAf7D,WACvC,GAAa,OAATC,GAAgC,SAAf0B,GAAyB3B,EAAY,OAAO,KAFhC,IAGzBwB,EAA2CvB,EAA3CuB,KAAMmG,EAAqC1H,EAArC0H,QAAS4E,EAA4BtM,EAA5BsM,iBAAkBH,EAAUnM,EAAVmM,MAEvCI,EAMED,EANFC,mBACAC,EAKEF,EALFE,iBACAC,EAIEH,EAJFG,iBACAC,EAGEJ,EAHFI,eACAC,EAEEL,EAFFK,eACAC,EACEN,EADFM,aAGF,OACExI,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAC1C,EAAD,KAAcL,EAAKuG,eACnB1D,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAACL,EAAD,CACEC,MAAOsI,EACPpL,KAAM,OACN+C,YAAaA,IAEfC,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAACL,EAAD,CACEC,MAAOuI,EACPrL,KAAM,OACN+C,YAAaA,IAEfC,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAACL,EAAD,CACEC,MAAOyI,EACPvL,KAAM,OACN+C,YAAaA,IAEfC,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAACL,EAAD,CACEC,MAAOqI,EACPnL,KAAM,OACN+C,YAAaA,IAEfC,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAACL,EAAD,CACEC,MAAOwI,EACPtL,KAAM,OACN+C,YAAaA,IAEfC,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAACL,EAAD,CACEC,MAAO0I,EACPxL,KAAM,OACN+C,YAAaA,IAEfC,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAACL,EAAD,CACEC,MAAOwD,EACPtG,KAAM,UACN+C,YAAaA,IAEfC,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAACL,EAAD,CACEC,MAAOiI,EACP/K,KAAM,OACN+C,YAAaA,OC/Cd,IAAM0I,GAAmBtF,YAhBhC,SAAyBxG,GACvB,MAAO,CACLS,QAAST,EAAMS,QACfxB,KAAMe,EAAMD,eAAeb,SAC3ByB,WAAYX,EAAMW,aAItB,SAA4ByE,GAC1B,MAAO,CACLhC,YAAa,SAACqD,EAAOuB,GACnB5C,EAASP,EAAU4B,EAAOuB,OAKAxB,CTmBzB,SAA4B3D,GAAO,IAChC5D,EAA+B4D,EAA/B5D,KAAMwB,EAAyBoC,EAAzBpC,QAAS2C,EAAgBP,EAAhBO,YACvB,IAAKnE,EAAM,OAAO,KAFsB,IAGhC8M,EAAoB9M,EAApB8M,gBACR,OACE1I,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACkF,GAAD,KAAgBhI,EAAQsG,eACvBgF,EAAgBtI,IAAI,SAAAkD,GACnB,IAAMnG,EAAOmG,EAAQqF,gBAAgBxL,KACrC,OACE6C,EAAAC,EAAAC,cAACrC,EAAD,CACEyC,IAAG,GAAAC,OAAKpD,EAAL,WACHqD,QAAS,kBAAMT,EAAY5C,EAAM,aAEhCA,QUlDN,IAAMyL,GAAiB1F,ECCvB,SAAmB1D,GAAO,IACvB5D,EAAiC4D,EAAjC5D,KAAM0B,EAA2BkC,EAA3BlC,WAAY3B,EAAe6D,EAAf7D,WAC1B,GAAa,OAATC,GAAgC,UAAf0B,GAA0B3B,EAAY,OAAO,KAFnC,IAK7BwB,EAQEvB,EARFuB,KACA0L,EAOEjN,EAPFiN,YACAC,EAMElN,EANFkN,SACAC,EAKEnN,EALFmN,YACAC,EAIEpN,EAJFoN,KACAC,EAGErN,EAHFqN,WACAC,EAEEtN,EAFFsN,aACAC,EACEvN,EADFuN,QAGF,OACEnJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAC1C,EAAD,KAAcL,EAAKuG,eAEnB1D,EAAAC,EAAAC,cAAA,uBAAe2I,GACf7I,EAAAC,EAAAC,cAAA,sBAAc4I,EAAS3L,MACvB6C,EAAAC,EAAAC,cAAA,yBAAiB6I,GACjB/I,EAAAC,EAAAC,cAAA,kBAAU8I,GACVhJ,EAAAC,EAAAC,cAAA,wBAAgB+I,GAChBjJ,EAAAC,EAAAC,cAAA,0BAAkBgJ,GAClBlJ,EAAAC,EAAAC,cAAA,qBAAaiJ,EAAQ/I,IAAI,SAAAgJ,GAAM,OAAIA,EAAOA,OAAOjM,OAAMkM,KAAK,UC1B3D,IAAMC,GAAiBpG,ECCvB,SAAmB1D,GAAO,IACvB5D,EAA8C4D,EAA9C5D,KAAM0B,EAAwCkC,EAAxClC,WAAYyC,EAA4BP,EAA5BO,YAAapE,EAAe6D,EAAf7D,WACvC,GAAa,OAATC,GAAgC,kBAAf0B,GAAkC3B,EACrD,OAAO,KAHsB,IAIvBwB,EAA0BvB,EAA1BuB,KAAMwL,EAAoB/M,EAApB+M,gBAEd,OACE3I,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAC1C,EAAD,KAAcL,EAAKuG,cAAnB,YACCiF,EAAgBvI,IAAI,SAAAqB,GACnB,OACEzB,EAAAC,EAAAC,cAAA,WAASI,IAAG,GAAAC,OAAKkB,EAAKtE,OACpB6C,EAAAC,EAAAC,cAAA,KAAGI,IAAG,GAAAC,OAAKkB,EAAKtE,KAAV,cAA4BsE,EAAKtE,MACvC6C,EAAAC,EAAAC,cAACrC,EAAD,CACEyC,IAAG,GAAAC,OAAKkB,EAAKtE,KAAV,gBACHgH,UAAU,sBACV3D,QAAS,kBAAMT,EAAY0B,EAAKtE,KAAM,aAHxC,WANR,uiBCGJ,IAAMoM,GAAa9L,IAAO8H,IAAViE,MAcVC,GAAahM,IAAO8H,IAAVmE,MAOT,SAASC,KACd,OACE3J,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACuJ,GAAD,KACEzJ,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,sBAEFF,EAAAC,EAAAC,cAACqJ,GAAD,KACEvJ,EAAAC,EAAAC,cAACgE,GAAD,MACAlE,EAAAC,EAAAC,cAAC2H,GAAD,MACA7H,EAAAC,EAAAC,cAACoH,GAAD,MACAtH,EAAAC,EAAAC,cAAC+H,GAAD,MACAjI,EAAAC,EAAAC,cAACmD,EAAD,MACArD,EAAAC,EAAAC,cAAC0I,GAAD,MACA5I,EAAAC,EAAAC,cAACoJ,GAAD,OAEFtJ,EAAAC,EAAAC,cAACqJ,GAAD,KACEvJ,EAAAC,EAAAC,cAACiH,GAAD,MACAnH,EAAAC,EAAAC,cAACkE,GAAD,MACApE,EAAAC,EAAAC,cAACuI,GAAD,MACAzI,EAAAC,EAAAC,cAACyD,EAAD,SClDV,IAAMiG,GCAC,WACL,IAAMC,EAAc,CAACC,KAMrB,OADcC,YAAYvN,EAAawN,IAAehH,WAAf,EAAmB6G,IDN9CI,GAUCC,OARf,WACE,OACElK,EAAAC,EAAAC,cAACiK,EAAA,EAAD,CAAUP,MAAOA,IACf5J,EAAAC,EAAAC,cAACyJ,GAAD,QEEcS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO1K,EAAAC,EAAAC,cAACyK,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a330d5ef.chunk.js","sourcesContent":["export const FETCH_DATA_START = 'FETCH_DATA_START';\nexport const FETCH_DATA_SUCCESS = 'FETCH_DATA_SUCCESS';\nexport const FETCH_DATA_ERROR = 'FETCH_DATA_ERROR';\nexport const CHANGE_POKEDEX = 'CHANGE_POKEDEX';\nexport const CHANGE_DISPLAY_TO = ' CHANGE_DISPLAY_TO';\n","import {\n  FETCH_DATA_SUCCESS,\n  FETCH_DATA_ERROR,\n  FETCH_DATA_START,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  isFetching: false,\n  data: null,\n  listData: null,\n  error: null,\n};\nconst pokedexi = {\n  kanto: true,\n  'original-johto': true,\n  hoenn: true,\n  'original-sinnoh': true,\n  'original-unova': true,\n  'kalos-central': true,\n  'kalos-coastal': true,\n  'kalos-mountain': true,\n};\nexport function fetchDataReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_DATA_ERROR:\n      return Object.assign({}, state, {\n        isFetching: false,\n        data: null,\n        listData: null,\n        error: action.error,\n      });\n    case FETCH_DATA_SUCCESS:\n      if (pokedexi[action.data.name]) {\n        return Object.assign({}, state, {\n          isFetching: false,\n          listData: action.data,\n          data: state.data,\n          error: null,\n        });\n      } else {\n        return Object.assign({}, state, {\n          isFetching: false,\n          listData: state.listData,\n          data: action.data,\n          error: null,\n        });\n      }\n    case FETCH_DATA_START:\n      return Object.assign({}, state, {\n        isFetching: true,\n        error: null,\n      });\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { displaying } from './changeDisplay';\nimport { pokedex } from './changePokedexReducers';\nimport { fetchDataReducer } from './fetchDataReducer';\n\nexport const rootReducer = combineReducers({\n  requestPokemon: fetchDataReducer,\n  pokedex,\n  displaying,\n});\n","import { CHANGE_POKEDEX } from '../actions/actionTypes';\n\nexport function pokedex(state = 'kanto', action) {\n  switch (action.type) {\n    case CHANGE_POKEDEX:\n      return action.region;\n    default:\n      return state;\n  }\n}\n","import { CHANGE_DISPLAY_TO } from '../actions/actionTypes';\n\nexport function displaying(state = 'pokemon', action) {\n  const type = action.type;\n  switch (type) {\n    case CHANGE_DISPLAY_TO:\n      return action.display;\n    default:\n      return state;\n  }\n}\n","import styled from 'styled-components';\n\nexport const LargeHeader = styled.h1`\n  text-family: Arial;\n  text-style: Bold;\n`;\n\nLargeHeader.displayName = 'LargeHeader';\n\nexport const Button = styled.button`\n  background-color: white;\n  color: black;\n  border-radius: 2px;\n  size: 20px;\n  border-radius: 3px;\n`;\n\nexport const Section = styled.section`\n  margin: 0px;\n`;\n\nexport const Image = styled.img`\n  box-shadow: 1px 1px 2px grey;\n  border-radius: 5px;\n  border: 1px silver solid;\n  background-color: rgb(233, 233, 233);\n  height: 80px;\n  width: 80px;\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { LargeHeader, Button, Image } from './StyledComponents';\nimport styled from 'styled-components';\n\nexport const MediumSection = styled.section`\n  height: 15%;\n  text-align: center;\n  display: block;\n  margin: 0 70px;\n  padding: 30px;\n`;\n\nconst BACKGROUND_COLORS = {\n  fire: 'radial-gradient(white, rgb(255, 94, 0))',\n  grass: 'radial-gradient(white, rgb(54, 168, 54))',\n  water: 'radial-gradient(white, rgb(67, 142, 255))',\n  flying: 'radial-gradient(silver, rgb(248, 255, 188))',\n  poison: 'radial-gradient(green, rgb(112, 0, 97))',\n  electric: 'radial-gradient(white, rgb(255, 232, 24))',\n  psychic: 'radial-gradient(rgb(217, 92, 255), rgb(94, 54, 168))',\n  ice: 'radial-gradient(silver, rgb(35, 38, 255))',\n  fighting: 'radial-gradient(silver, brown)',\n  ground: 'radial-gradient(black, brown)',\n  rock: 'radial-gradient(brown, grey)',\n  steel: 'radial-gradient(silver, grey)',\n  normal: 'radial-gradient(white, tan)',\n};\n\nconst DEFAULT_COLORS = 'radial-gradient(white, white)';\n\nexport const ImageSection = styled(MediumSection)`\n  background-image: ${props => {\n    return BACKGROUND_COLORS[props.type] || DEFAULT_COLORS;\n  }};\n  border: 2px solid black;\n  border-radius: 4px;\n  box-shadow: 1px 1px silver;\n`;\n\nexport const SmallSection = styled.section`\n  height: 10%;\n  border-bottom: 1px solid silver;\n`;\n\nexport const LargeSection = styled.section`\n  height: 50%;\n`;\n\nexport function CreateButtonsFromInfo(props) {\n  const { array, type, requestData } = props;\n\n  return (\n    <>\n      {array.map(object => {\n        const name = object[type] ? object[type].name : object.name;\n        return (\n          <Button\n            key={`${name} button`}\n            onClick={() => requestData(name, type)}\n          >\n            {name}\n          </Button>\n        );\n      })}\n    </>\n  );\n}\n\nCreateButtonsFromInfo.propTypes = {\n  array: PropTypes.array,\n  type: PropTypes.string,\n  requestData: PropTypes.func,\n};\n\nexport function ImageDisplay(props) {\n  const forwardFacingSprite = 2;\n  const [index, addIndex] = useState(forwardFacingSprite);\n  const { sprites, name } = props;\n  const spritesValues = Object.values(sprites).filter(\n    sprite => sprite !== null,\n  );\n  const currentSprite = index % spritesValues.length;\n  return (\n    <Image\n      src={spritesValues[currentSprite]}\n      alt={name}\n      onClick={() => addIndex(index + 1)}\n    />\n  );\n}\n\nImageDisplay.propTypes = {\n  sprites: PropTypes.object,\n  name: PropTypes.string,\n};\n\nexport function PokemonDisplay(props) {\n  const { data, displaying, requestData, isFetching } = props;\n  if (data === null && !isFetching) {\n    requestData('charmander', 'pokemon');\n    return null;\n  }\n  if (displaying !== 'pokemon' || data === null || isFetching) return null;\n\n  const { name, types, moves, abilities, sprites } = data;\n  const type = types[0].type.name;\n  return (\n    <div className={`pokemon-card`}>\n      <MediumSection>\n        <LargeHeader>{name.toUpperCase()}</LargeHeader>\n      </MediumSection>\n      <ImageSection type={type}>\n        <ImageDisplay sprites={sprites} name={name} />\n      </ImageSection>\n      <SmallSection>\n        <h4>Type</h4>\n        <CreateButtonsFromInfo\n          array={types}\n          type={'type'}\n          requestData={requestData}\n        />\n      </SmallSection>\n      <SmallSection>\n        <h4>Ability</h4>\n        <CreateButtonsFromInfo\n          array={abilities}\n          type={'ability'}\n          requestData={requestData}\n        />\n      </SmallSection>\n      <LargeSection>\n        <h4>Moves</h4>\n        <CreateButtonsFromInfo\n          array={moves}\n          type={'move'}\n          requestData={requestData}\n        />\n      </LargeSection>\n    </div>\n  );\n}\n\nPokemonDisplay.propTypes = {\n  data: PropTypes.object,\n  displaying: PropTypes.string,\n  requestData: PropTypes.func,\n  isFetching: PropTypes.bool,\n};\n","import {\n  FETCH_DATA_ERROR,\n  FETCH_DATA_START,\n  FETCH_DATA_SUCCESS,\n  CHANGE_POKEDEX,\n  CHANGE_DISPLAY_TO,\n} from './actionTypes';\n\nexport function fetchData(info, display, type) {\n  type = type === undefined ? display : type;\n  return async function requestPokemon(dispatch) {\n    dispatch(fetchDataStart());\n    const response = await fetch(`https://pokeapi.co/api/v2/${type}/${info}`);\n    if (response.status === 200) {\n      const data = await response.json();\n      dispatch(changeDisplay(display));\n      dispatch(fetchDataSuccess(data));\n    } else {\n      const { status, statusText, url } = response;\n      const errorInfo = { status, statusText, url };\n      dispatch(fetchDataError(errorInfo));\n    }\n  };\n}\n\nexport function fetchUrl(url) {\n  return async function requestUrl(dispatch) {\n    dispatch(fetchDataStart());\n    const response = await fetch(url);\n    if (response.status === 200) {\n      const data = await response.json();\n      dispatch(fetchDataSuccess(data));\n    } else {\n      const { status, statusText, url } = response;\n      const errorInfo = { status, statusText, url };\n      dispatch(fetchDataError(errorInfo));\n    }\n  };\n}\n\nexport function fetchDataSuccess(data) {\n  return { type: FETCH_DATA_SUCCESS, data: data };\n}\n\nexport function fetchDataError(error) {\n  return { type: FETCH_DATA_ERROR, error: error };\n}\n\nexport function fetchDataStart() {\n  return { type: FETCH_DATA_START };\n}\n\nexport function changePokedex(region) {\n  return { type: CHANGE_POKEDEX, region: region };\n}\n\nexport function changeDisplay(input) {\n  return { type: CHANGE_DISPLAY_TO, display: input };\n}\n","import { connect } from 'react-redux';\nimport { fetchData } from '../actions/actions';\n\nfunction mapStateToProps(state) {\n  return {\n    data: state.requestPokemon.data,\n    displaying: state.displaying,\n    isFetching: state.requestPokemon.isFetching,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    requestData: (input, type) => {\n      dispatch(fetchData(input, type));\n    },\n  };\n}\n\nexport const ViewsContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n);\n","import { AbilityDisplay } from '../views/AbilityDisplay';\nimport { ViewsContainer } from './ViewsContainer';\n\nexport const AbilityContainer = ViewsContainer(AbilityDisplay);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { CreateButtonsFromInfo } from './PokemonDisplay';\nimport { LargeHeader } from './StyledComponents';\n\nexport function AbilityDisplay(props) {\n  const { data, displaying, requestData, isFetching } = props;\n  if (!data || displaying !== 'ability' || isFetching) return null;\n\n  const { name, pokemon, effect_entries } = data;\n  const firstEffect = effect_entries[0].effect;\n  return (\n    <>\n      <LargeHeader>{name.toUpperCase()}</LargeHeader>\n      <h3>Effect</h3>\n      <p>{firstEffect}</p>\n      <h3>Pokemon with {name}</h3>\n      <CreateButtonsFromInfo\n        array={pokemon}\n        type={'pokemon'}\n        requestData={requestData}\n      />\n    </>\n  );\n}\n\nAbilityDisplay.propTypes = {\n  data: PropTypes.object,\n  displaying: PropTypes.string,\n  requestData: PropTypes.func,\n  isFetching: PropTypes.bool,\n};\n","import { ErrorView } from '../views/ErrorView';\nimport { connect } from 'react-redux';\n\nfunction mapStateToProps(state) {\n  return {\n    error: state.requestPokemon.error,\n  };\n}\n\nexport const ErrorContainer = connect(\n  mapStateToProps,\n  null,\n)(ErrorView);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { LargeHeader } from './StyledComponents';\n\nexport function ErrorView(props) {\n  const { error } = props;\n  if (!error) return null;\n  let errorInfo = 'Unknown Rrror';\n  if (error.status === 404) {\n    errorInfo = 'Unable to find search, please try another one';\n  }\n  return (\n    <>\n      <LargeHeader>Error: {error.status}</LargeHeader>\n      <p>{errorInfo}</p>\n    </>\n  );\n}\n\nErrorView.propTypes = {\n  error: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { LargeHeader, Image, Section } from './StyledComponents';\nimport styled from 'styled-components';\n\nexport const LargerImage = styled(Image)`\n  height: 200px;\n  width: 200px;\n  border: 0px;\n`;\n\nconst FetchSection = styled(Section)`\n  display: block;\n  text-align: center;\n`;\n\nexport const SPINNING_POKEBALL =\n  'https://media1.tenor.com/images/c59e7bfa31590e3f9eb4925639ddeb88/tenor.gif?itemid=7283217';\n\nexport function FetchingDisplay(props) {\n  const { isFetching } = props;\n\n  if (!isFetching) return null;\n\n  return (\n    <FetchSection>\n      <LargeHeader>Searching</LargeHeader>\n      <LargerImage\n        className=\"spinning-pokeball\"\n        src={SPINNING_POKEBALL}\n        alt=\"SPINNING POKEBALL\"\n      />\n    </FetchSection>\n  );\n}\n\nFetchingDisplay.propTypes = {\n  isFetching: PropTypes.bool,\n};\n","import { FetchingDisplay } from '../views/FetchingDisplay';\nimport { connect } from 'react-redux';\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.requestPokemon.isFetching,\n  };\n}\n\nexport const FetchingContainer = connect(\n  mapStateToProps,\n  null,\n)(FetchingDisplay);\n","import { ListDisplay } from '../views/ListDisplay';\nimport { connect } from 'react-redux';\nimport { fetchUrl, fetchData } from '../actions/actions';\n\nfunction mapStateToProps(state) {\n  return {\n    data: state.requestPokemon.data,\n    displaying: state.displaying,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchUrl: url => dispatch(fetchUrl(url)),\n    requestData: (input, parameter) => dispatch(fetchData(input, parameter)),\n  };\n}\n\nexport const ListContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ListDisplay);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from './StyledComponents';\n\nexport function ListDisplay(props) {\n  const { data, requestData, displaying, fetchUrl } = props;\n  if (!data || !data.count) return null;\n  const { previous, next, results } = data;\n\n  const previousButton = previous ? (\n    <Button\n      key=\"previous-button\"\n      className=\"previous-button\"\n      onClick={() => fetchUrl(previous)}\n    >\n      Previous\n    </Button>\n  ) : null;\n\n  const nextButton = next ? (\n    <Button\n      key=\"next-button\"\n      className=\"next-button\"\n      onClick={() => fetchUrl(next)}\n    >\n      Next\n    </Button>\n  ) : null;\n\n  return (\n    <>\n      {results.map(info => {\n        return (\n          <section key={`${info.name}`}>\n            <p key={`${info.name}-list-par`}>{info.name}</p>\n            <Button\n              key={`${info.name}-list-button`}\n              className=\"view-pokemon-button\"\n              onClick={() => requestData(info.name, displaying)}\n            >\n              View\n            </Button>\n          </section>\n        );\n      })}\n      {previousButton}\n      {nextButton}\n    </>\n  );\n}\n\nListDisplay.propTypes = {\n  data: PropTypes.object,\n  requestData: PropTypes.func,\n  displaying: PropTypes.string,\n  fetchUrl: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, LargeHeader } from './StyledComponents';\nimport styled from 'styled-components';\n\nexport const Select = styled.select`\n  margin: 0 auto;\n  width: 235px;\n  height: 40px;\n  background-color: black;\n  color: white;\n  font-size: 25px;\n  border-radius: 2px;\n  box-shadow: 1px 1px 1px silver;\n`;\n\nexport const PokedexHeader = styled(LargeHeader)`\n  border-bottom: 1px black solid;\n  text-align: center;\n`;\n\nexport const PokedexDiv = styled.div`\n  background-color: white;\n  font-family: Arial, Helvetica, sans-serif;\n  margin: 0 auto;\n  padding: 5px 0;\n`;\n\nexport function MultipleOptions(props) {\n  const { options } = props;\n  return options.map(option => {\n    return (\n      <option key={option} value={option}>\n        {option.toUpperCase()}\n      </option>\n    );\n  });\n}\n\nexport function PokedexPokemonList(props) {\n  const { data, pokedex, requestData } = props;\n  if (!data) return null;\n  const { pokemon_entries } = data;\n  return (\n    <>\n      <PokedexHeader>{pokedex.toUpperCase()}</PokedexHeader>\n      {pokemon_entries.map(pokemon => {\n        const name = pokemon.pokemon_species.name;\n        return (\n          <Button\n            key={`${name} button`}\n            onClick={() => requestData(name, 'pokemon')}\n          >\n            {name}\n          </Button>\n        );\n      })}\n    </>\n  );\n}\n\nPokedexPokemonList.propTypes = {\n  pokedex: PropTypes.string,\n  data: PropTypes.object,\n  requestData: PropTypes.func,\n  displaying: PropTypes.string,\n};\n\nexport function PokedexDisplay(props) {\n  const { changePokedex, displaying } = props;\n\n  const regions = [\n    'kanto',\n    'original-johto',\n    'hoenn',\n    'original-sinnoh',\n    'original-unova',\n    'kalos-central',\n    'kalos-coastal',\n    'kalos-mountain',\n  ];\n  return (\n    <PokedexDiv>\n      <Select\n        onChange={event =>\n          changePokedex(event.target.value, displaying, 'pokedex')\n        }\n      >\n        <MultipleOptions options={regions} />\n      </Select>\n    </PokedexDiv>\n  );\n}\n\nPokedexDisplay.propTypes = {\n  isFetching: PropTypes.bool,\n  data: PropTypes.object,\n  changePokedex: PropTypes.func,\n  displaying: PropTypes.string,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from './StyledComponents';\nimport { PokedexDiv } from './PokedexDisplay';\nimport styled from 'styled-components';\n\nconst ENTER_KEY = 13;\n\nconst Input = styled.input`\n  margin: 0 auto;\n  width: 235px;\n`;\n\nexport function ChangeSearchByButtons(props) {\n  const { parameters, changeParameter } = props;\n  const buttons = parameters.map(parameter => {\n    return (\n      <Button\n        key={`${parameter} button`}\n        onClick={() => changeParameter(parameter)}\n      >\n        {parameter.toUpperCase()}\n      </Button>\n    );\n  });\n\n  return <>{buttons}</>;\n}\n\nChangeSearchByButtons.propTypes = {\n  parameters: PropTypes.array,\n  changeParameter: PropTypes.func,\n};\n\nexport function SearchBar(props) {\n  const { requestData } = props;\n  const [parameter, changeParameter] = useState('pokemon');\n  const parameters = [\n    'ability',\n    'pokemon',\n    'type',\n    'move',\n    'berry',\n    'pokemon-color',\n  ];\n\n  return (\n    <PokedexDiv>\n      <ChangeSearchByButtons\n        parameters={parameters}\n        changeParameter={changeParameter}\n      />\n      <h4>SEARCH BY: {parameter.toUpperCase()}</h4>\n      <Input\n        type=\"search\"\n        onKeyDown={event => {\n          if (event.keyCode === ENTER_KEY) {\n            requestData(event.target.value, parameter);\n            event.target.value = '';\n          }\n        }}\n      />\n    </PokedexDiv>\n  );\n}\n\nSearchBar.propTypes = {\n  requestData: PropTypes.func,\n};\n","import { PokedexDisplay } from './PokedexDisplay';\nimport { SearchBar } from './SearchBarDisplay';\nimport React, { useState } from 'react';\nimport { Button } from './StyledComponents';\nimport styled from 'styled-components';\n\nexport const MenuSection = styled.section`\n  background-color: white;\n  text-align: center;\n  display: block;\n`;\n\nexport const ActiveButton = styled(Button)`\n  ${props => {\n    if (props.active) {\n      return `background-color: silver;\n          border-bottom: 1px solid black;`;\n    }\n  }}\n`;\n\nexport const Nav = styled.section`\n  display: inline-block;\n  text-align: center;\n  width: 100%;\n`;\n\nexport function ToggleMenu(props) {\n  const [view, changeView] = useState('pokedex');\n\n  let display;\n  switch (view) {\n    case 'pokedex':\n      display = (\n        <MenuSection>\n          <PokedexDisplay {...props} />\n        </MenuSection>\n      );\n      break;\n    default:\n      display = (\n        <MenuSection>\n          <SearchBar {...props} />\n        </MenuSection>\n      );\n      break;\n  }\n\n  return (\n    <Nav>\n      <ActiveButton\n        active={view === 'search'}\n        onClick={() => {\n          changeView('pokedex');\n        }}\n      >\n        Pokedex\n      </ActiveButton>\n      <ActiveButton\n        active={view === 'pokedex'}\n        onClick={() => {\n          changeView('search');\n        }}\n      >\n        Search Bar\n      </ActiveButton>\n\n      {display}\n    </Nav>\n  );\n}\n","import { connect } from 'react-redux';\nimport { ToggleMenu } from '../views/Menu';\nimport { changePokedex, fetchData } from '../actions/actions';\n\nfunction mapStateToProps(state) {\n  return {\n    pokedex: state.pokedex,\n    data: state.requestPokemon.data,\n    displaying: state.displaying,\n    isFetching: state.requestPokemon.isFetching,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changePokedex: (input, display, type) => {\n      dispatch(changePokedex(input));\n      dispatch(fetchData(input, display, type));\n    },\n\n    requestData: (input, parameter) => {\n      dispatch(fetchData(input, parameter));\n    },\n  };\n}\n\nexport const MenuContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ToggleMenu);\n","import { ViewsContainer } from './ViewsContainer';\nimport { MoveDisplay } from '../views/MovesDisplay';\n\nexport const MoveContainer = ViewsContainer(MoveDisplay);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, LargeHeader } from './StyledComponents';\n\nexport function MoveDisplay(props) {\n  const { data, displaying, requestData, isFetching } = props;\n  if (data === null || displaying !== 'move' || isFetching) return null;\n  const { accuracy, effect_entries, name, power, pp, type } = data;\n  const accuracyDisplay = accuracy ? accuracy : 'Does not apply';\n  const effectDisplay =\n    effect_entries.length === 0\n      ? 'Move has no description'\n      : effect_entries[0].effect;\n  const powerDisplay = power ? power : 'Does not apply';\n\n  return (\n    <>\n      <LargeHeader>{name.toUpperCase()}</LargeHeader>\n      <h6>Type: </h6>\n      <Button onClick={() => requestData(type.name, 'type')}>\n        {type.name}\n      </Button>\n      <p>{effectDisplay}</p>\n\n      <p>Accuracy: {accuracyDisplay}</p>\n      <p>PP: {pp}</p>\n      <p>Power: {powerDisplay}</p>\n    </>\n  );\n}\n\nMoveDisplay.propTypes = {\n  data: PropTypes.object,\n  displaying: PropTypes.string,\n  requestData: PropTypes.func,\n  isFetching: PropTypes.bool,\n};\n","import { ViewsContainer } from './ViewsContainer';\nimport { PokemonDisplay } from '../views/PokemonDisplay';\n\nexport const PokemonContainer = ViewsContainer(PokemonDisplay);\n","import { TypeDisplay } from '../views/TypeDisplay';\nimport { ViewsContainer } from './ViewsContainer';\n\nexport const TypeContainer = ViewsContainer(TypeDisplay);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CreateButtonsFromInfo } from './PokemonDisplay';\nimport { LargeHeader } from './StyledComponents';\n\nexport function TypeDisplay(props) {\n  const { data, displaying, requestData, isFetching } = props;\n  if (data === null || displaying !== 'type' || isFetching) return null;\n  const { name, pokemon, damage_relations, moves } = data;\n  const {\n    double_damage_from,\n    double_damage_to,\n    half_damage_from,\n    half_damage_to,\n    no_damage_from,\n    no_damage_to,\n  } = damage_relations;\n\n  return (\n    <>\n      <LargeHeader>{name.toUpperCase()}</LargeHeader>\n      <h4>Double Damage To:</h4>\n      <CreateButtonsFromInfo\n        array={double_damage_to}\n        type={'type'}\n        requestData={requestData}\n      />\n      <h4>Half Damage From:</h4>\n      <CreateButtonsFromInfo\n        array={half_damage_from}\n        type={'type'}\n        requestData={requestData}\n      />\n      <h4>No Damage From:</h4>\n      <CreateButtonsFromInfo\n        array={no_damage_from}\n        type={'type'}\n        requestData={requestData}\n      />\n      <h4>Double Damage From:</h4>\n      <CreateButtonsFromInfo\n        array={double_damage_from}\n        type={'type'}\n        requestData={requestData}\n      />\n      <h4>Half Damage To:</h4>\n      <CreateButtonsFromInfo\n        array={half_damage_to}\n        type={'type'}\n        requestData={requestData}\n      />\n      <h4>No Damage To:</h4>\n      <CreateButtonsFromInfo\n        array={no_damage_to}\n        type={'type'}\n        requestData={requestData}\n      />\n      <h3>Pokemon</h3>\n      <CreateButtonsFromInfo\n        array={pokemon}\n        type={'pokemon'}\n        requestData={requestData}\n      />\n      <h3>Moves</h3>\n      <CreateButtonsFromInfo\n        array={moves}\n        type={'move'}\n        requestData={requestData}\n      />\n    </>\n  );\n}\n\nTypeDisplay.propTypes = {\n  data: PropTypes.object,\n  displaying: PropTypes.string,\n  requestData: PropTypes.func,\n  isFetching: PropTypes.bool,\n};\n","import { PokedexPokemonList } from '../views/PokedexDisplay';\nimport { connect } from 'react-redux';\nimport { fetchData } from '../actions/actions';\n\nfunction mapStateToProps(state) {\n  return {\n    pokedex: state.pokedex,\n    data: state.requestPokemon.listData,\n    displaying: state.displaying,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    requestData: (input, parameter) => {\n      dispatch(fetchData(input, parameter));\n    },\n  };\n}\n\nexport const PokedexContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(PokedexPokemonList);\n","import { ViewsContainer } from './ViewsContainer';\nimport { BerryView } from '../views/BerryView';\n\nexport const BerryContainer = ViewsContainer(BerryView);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { LargeHeader } from './StyledComponents';\n\nexport function BerryView(props) {\n  const { data, displaying, isFetching } = props;\n  if (data === null || displaying !== 'berry' || isFetching) return null;\n\n  const {\n    name,\n    growth_time,\n    firmness,\n    max_harvest,\n    size,\n    smoothness,\n    soil_dryness,\n    flavors,\n  } = data;\n\n  return (\n    <>\n      <LargeHeader>{name.toUpperCase()}</LargeHeader>\n\n      <p>Grow Time: {growth_time}</p>\n      <p>Firmness: {firmness.name}</p>\n      <p>Max Harvest: {max_harvest}</p>\n      <p>Size: {size}</p>\n      <p>Smoothness: {smoothness}</p>\n      <p>Soil Dryness: {soil_dryness}</p>\n      <p>Flavors: {flavors.map(flavor => flavor.flavor.name).join('  ')}</p>\n    </>\n  );\n}\n\nBerryView.propTypes = {\n  data: PropTypes.object,\n  displaying: PropTypes.string,\n  isFetching: PropTypes.bool,\n};\n","import { ViewsContainer } from './ViewsContainer';\nimport { ColorView } from '../views/ColorView';\n\nexport const ColorContainer = ViewsContainer(ColorView);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, LargeHeader } from './StyledComponents';\n\nexport function ColorView(props) {\n  const { data, displaying, requestData, isFetching } = props;\n  if (data === null || displaying !== 'pokemon-color' || isFetching)\n    return null;\n  const { name, pokemon_species } = data;\n\n  return (\n    <>\n      <LargeHeader>{name.toUpperCase()} POKEMON</LargeHeader>\n      {pokemon_species.map(info => {\n        return (\n          <section key={`${info.name}`}>\n            <p key={`${info.name}-list-par`}>{info.name}</p>\n            <Button\n              key={`${info.name}-list-button`}\n              className=\"view-pokemon-button\"\n              onClick={() => requestData(info.name, 'pokemon')}\n            >\n              View\n            </Button>\n          </section>\n        );\n      })}\n      ;\n    </>\n  );\n}\n\nColorView.propTypes = {\n  data: PropTypes.object,\n  displaying: PropTypes.string,\n  requestData: PropTypes.func,\n  isFetching: PropTypes.bool,\n};\n","import React from 'react';\nimport { AbilityContainer } from './AbilityContainer';\nimport { ErrorContainer } from './ErrorContainer';\nimport { FetchingContainer } from './FetchingContainer';\nimport { ListContainer } from './ListContainer';\nimport { MenuContainer } from './MenuContainer';\nimport { MoveContainer } from './MoveContainer';\nimport { PokemonContainer } from './PokemonContainer';\nimport { TypeContainer } from './TypeContainer';\nimport { PokedexContainer } from './PokedexContainer';\nimport { BerryContainer } from './BerryContainer';\nimport { ColorContainer } from './ColorContainer';\nimport styled from 'styled-components';\n\nconst DisplayDiv = styled.div`\n  width: 46%;\n  height: 80%;\n  top: 12%;\n  position: relative;\n  display: inline-block;\n  border-radius: 5px;\n  box-shadow: 3px 3px 5px black, 4px 4px 5px grey, 3px 3px 5px grey,\n    4px 4px 5px grey;\n  margin: 2%;\n  overflow: scroll;\n  background-color: white;\n`;\n\nconst WrapperDiv = styled.div`\n  text-align: center;\n  background-image: linear-gradient(to bottom right, white, red);\n  height: 100vh;\n  width: 100vw;\n`;\n\nexport function RootContainer() {\n  return (\n    <>\n      <WrapperDiv>\n        <header>\n          <h1>Pokedex</h1>\n        </header>\n        <DisplayDiv>\n          <FetchingContainer />\n          <PokemonContainer />\n          <MoveContainer />\n          <TypeContainer />\n          <AbilityContainer />\n          <BerryContainer />\n          <ColorContainer />\n        </DisplayDiv>\n        <DisplayDiv>\n          <MenuContainer />\n          <ListContainer />\n          <PokedexContainer />\n          <ErrorContainer />\n        </DisplayDiv>\n      </WrapperDiv>\n    </>\n  );\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { configureStore } from './configureStore';\nimport { RootContainer } from './containers/RootContainer';\n\nconst store = configureStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <RootContainer />\n    </Provider>\n  );\n}\n\nexport default App;\n","import thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { createStore, applyMiddleware } from 'redux';\nimport { rootReducer } from './reducers/rootReducer';\n\nexport function configureStore() {\n  const middlewares = [thunk];\n  if (process.env.NODE_ENV === 'development') {\n    middlewares.push(logger);\n  }\n\n  const store = createStore(rootReducer, applyMiddleware(...middlewares));\n  return store;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}